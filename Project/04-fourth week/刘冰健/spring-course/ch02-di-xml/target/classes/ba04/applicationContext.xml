<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--声明student对象
    注入：赋值
    简单类型：spring中规定java的基本数据类型和String都是简单类型
    di：给属性赋值
    1.set注入（设值注入）：spring调用类的set方法，你可以在set方法中完成属性赋值
        1）简单类型的set注入
            <bean id="xx" class="yyy">
                <property name="属性名字" value="此属性的值"/>
                一个property只能给一个属性赋值
                <property ....
            </bean>

        2)引用类型的set注入：spring调用类的set方法
            <bean id="xxx" class="yyy">
                <property name="属性名称" ref="bean的id（对象的名称）"/>
            </bean>
       2.构造注入：spring调用类的有参数构造方法，在创建对象的同时，在构造方法中给属性赋值
         构造注入使用<constructor-arg>标签
         <constructor-arg>标签：一个<constructor-arg>表示构造方法一个参数。
         <constructor-arg>标签属性：
            name：表示构造方法形参名
            index：表示构造方法参数位置，参数从左往右是0，1，2的顺序
            value：构造方法的形参类型是简单类型的，使用value
            ref：构造方法的形参类型是简单类型的，使用ref

-->

<!--
    引用类型的自动注入：spring框架根据某些规则可以给引用类型赋值。
    使用的规则通常用的是byName，byType
    1.byName（按名称注入）:java类中引用类型的属性名和spring容器中（配置文件）<bean>的id名称一样
                           且数据类型是一致的，这样的容器中的bean，spring能够赋值给引用类型。
      语法：
      <bean id="xx" class="yy" autowire="byName">
        简单类型属性赋值
      </bean>
    2.byType( 按类型注入）:java类中引用类型的数据类型和spring容器中（配置文件）<bean>的class属性
                          是同源关系的，这样的bean能够赋值给引用类型
      同源就是一类的意思：
        1.java类中引用类型的数据类型和bean的class的值的是一样的。
        2.java类中引用类型的数据类型和bean的class的值父子类关系的。
        3.java类中引用类型的数据类型和bean的class的值接口和实现类关系的
        语法：
        <bean id="xx" class="yy" autowire="byType">
            简单类型属性赋值
         </bean>
-->


<!--通过name属性-->
    <bean id="myStudent" class="org.example.ba04.Student" autowire="byName">
        <property name="name" value="王五"/>
        <property name="age" value="20"/>
<!--        引用类型-->
    </bean>

    <bean id="school" class="org.example.ba04.School">
        <property name="address" value="北京海淀"/>
        <property name="name" value="清华大学"/>
    </bean>
</beans>